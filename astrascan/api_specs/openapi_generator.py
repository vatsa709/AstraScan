# astrascan_project/astrascan/api_specs/openapi_generator.py

from urllib.parse import urlparse

def generate_openapi_spec(endpoints):
    """Generates a basic OpenAPI v3 schema from discovered endpoints."""
    spec = {
        "openapi": "3.0.0",
        "info": {"title": "AstraScan Discovered API", "version": "1.0.0", "description": "Auto-generated by AstraScan"},
        "paths": {}
    }
    for ep in endpoints:
        path_template = urlparse(ep["url"]).path
        
        parts = path_template.split('/')
        if len(parts) > 1 and parts[-1].isdigit():
            path_template = '/'.join(parts[:-1]) + '/{id}'

        if path_template not in spec["paths"]:
            spec["paths"][path_template] = {}
        
        method_lower = ep["method"].lower()
        if method_lower not in spec["paths"][path_template]:
            spec["paths"][path_template][method_lower] = {
                "summary": f"Discovered {ep['method']} {path_template}",
                "responses": {}
            }
        
        if str(ep["status_code"]) not in spec["paths"][path_template][method_lower]["responses"]:
             spec["paths"][path_template][method_lower]["responses"][str(ep["status_code"])] = {
                "description": f"Response from {ep['status_code']}",
                "content": {
                    "application/json": {
                        "schema": {"type": "object"}
                    }
                }
            }
    return spec
